{
	"compilerOptions": {
		"outDir": "dist",
		"declaration": true,
		"declarationMap": true,
		"module": "ESNext",
		"target": "ES5",
		"jsx": "react-jsx",
		"esModuleInterop": true,
		"lib": ["es6", "dom", "es2016", "es2017", "esnext"],
		"allowJs": false /* Allow javascript files to be compiled. */,
		"jsx": "react" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
		"declaration": true /* Generates corresponding '.d.ts' file. */,
		"sourceMap": true /* Generates corresponding '.map' file. */,
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"noEmit": true /* Do not emit outputs. */,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* Enable strict null checks. */,
		"noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
		// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
		"skipLibCheck": true,
		/* Additional Checks */
		"noUnusedLocals": true /* Report errors on unused locals. */,
		"noUnusedParameters": true /* Report errors on unused parameters. */,
		"noImplicitReturns": true /* Report error when not all code paths in function return a value. */,

		/* Module Resolution Options */
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all 

    /* Advanced Options */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
	},
	"include": ["src"],
	"exclude": [
		"node_modules",
		"dist",
		"**/*.spec.ts",
		"rollup.config.js",
		"build"
	]
}
